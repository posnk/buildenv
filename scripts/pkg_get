#!/bin/bash
# posnk package manager, package download module
# written by Peter Bosch <peterbosc@gmail.com>

. pkg_load

PKGMGR_DLTOKEN="$POSBUILDROOT/var/pkgs/$PKGINFO_NAME""_dl"

if [  -f "$PKGMGR_DLTOKEN" ]; then 
	PKGMGR_DLVERSION=`cat $PKGMGR_DLTOKEN`
	if [ "$PKGMGR_DLVERSION" != "$PKGINFO_VERSION" ]; then

		echo "Upgrading $PKGINFO_NAME from $PKGMGR_DLVERSION \
to $PKGINFO_VERSION"

	elif [ $PKGMGR_FORCEDL != "yes" ]; then 
		echo "Package $PKGINFO_NAME already download!"
		echo "Run PKGMGR_FORCEDL=yes pkg_get $1 to force download"
		exit 0
	fi
fi

if [ "$PKGMGR_VERBOSE" = "yes" ]; then

	echo "Downloading package: $PKGINFO_NAME"
	echo "Download type: $PKGINFO_FETCHTYPE"

fi

if [ "$PKGINFO_FETCHTYPE" = "dist" ]; then

	if [ "$PKGMGR_VERBOSE" = "yes" ]; then
		echo "Doing dist fetch"
		echo "Extraction options: $PKGINFO_FETCHOPTS"
		echo "Download URL: $PKGINFO_FETCHURL"
	fi	

	echo "Downloading package $PKGINFO_NAME ..."
	fetchpkg "$PKGINFO_FETCHOPTS" "$PKGINFO_FETCHURL" || {
		echo "Could not fetch package!"
		exit 255
	}


elif [ "$PKGINFO_FETCHTYPE" = "git" ]; then

	echo "Cloning package $PKGINFO_NAME ..."
	# TODO: Implement git packages

else

	echo "Invalid package fetch type!"
	exit 255

fi

if [ "$PKG_DOPATCH" = "yes"]; then

	echo "Patching upstream package..."

	patchpkg "$PKGINFO_NAME" || {
		echo "Could not patch package!"
		exit 255
	}

else

	editpkg "$PKGINFO_NAME"	|| {
		echo "Could not instantiate local clone..."
		exit 255
	}

fi

echo "$PKGINFO_VERSION" > $PKGMGR_DLTOKEN

echo Package downloaded!

exit 0
